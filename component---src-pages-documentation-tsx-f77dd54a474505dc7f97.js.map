{"version":3,"sources":["webpack:///./src/pages/documentation.tsx","webpack:///./src/components/doc.tsx","webpack:///./src/templates/docTemplate.tsx"],"names":["DocTemplate","query","Doc","memo","docPage","toc","tableOfContents","renderAst","htmlAst","PageToc","tocMarkup","useMemo","__html","indexOf","TocContainer","TocHeader","TocContent","className","dangerouslySetInnerHTML","styled","div","require","DocStructure","pathname","page","title","frontmatter","sidebar","items","convertGraphqlToc","activePath","flat","Template","data","currentPage","location","pageQuery"],"mappings":"iGAAA,6DASeA,YAAf,QAEO,IAAMC,EAAQ,c,yQCkBNC,EAbiBC,gBAAK,YAA0B,IAAXC,EAAW,EAAXA,QACnD,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,MACA,kBAAC,IAAD,KACC,kBAAC,EAAD,CAASC,IAAKD,EAAQE,kBACrBC,YAAUH,EAAQI,UAEpB,kBAAC,IAAD,UAUGC,EAAkCN,gBAAK,YAA0B,IAAPE,EAAO,EAAPA,IACzDK,EAAYC,mBAAQ,iBAAO,CAAEC,OAAQP,KAAQ,CAACA,IACpD,OAA2B,IAAvBA,EAAIQ,QAAQ,MACR,KAGP,kBAACC,EAAD,KACC,kBAACC,EAAD,iBACA,kBAACC,EAAD,CAAYC,UAAU,cAAcC,wBAAyBR,QAK1DI,EAAeK,IAAOC,IAAV,uEAAGD,CAAH,sEAMZJ,EAAYI,IAAOC,IAAV,oEAAGD,CAAH,+EAOTH,EAAaG,IAAOC,IAAV,qEAAGD,CAAH,kGChDhBE,EAAQ,QAOD,IAAMC,EAA4CnB,gBACxD,YAA+C,IAAvBE,EAAuB,EAAvBA,IAAKkB,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KACtC,OACC,kBAAC,IAAD,CACCC,MAAOD,EAAKE,YAAYD,MACxBE,QACC,kBAAC,IAAD,CACCC,MAAOC,YAAkBxB,GACzByB,WAAYP,EACZQ,MAAM,KAIR,kBAAC,EAAD,CAAK3B,QAASoB,QAMH,SAASQ,EAAT,GAGP,QAFPC,KAAQ5B,EAED,EAFCA,IAAK6B,EAEN,EAFMA,YACDX,EACL,EADPY,SAAYZ,SAEZ,OAAO,kBAAC,EAAD,CAAclB,IAAKA,EAAKmB,KAAMU,EAAaX,SAAUA,IAGtD,IAAMa,EAAY,c","file":"component---src-pages-documentation-tsx-f77dd54a474505dc7f97.js","sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport { graphql } from 'gatsby'\nimport DocTemplate from '../templates/docTemplate'\n\n// Gatsby page handler for http://<domain>/documentation\nexport default DocTemplate\n\nexport const query = graphql`\n\t{\n\t\tcurrentPage: markdownRemark(\n\t\t\tfrontmatter: { path: { eq: \"/documentation/introduction\" } }\n\t\t) {\n\t\t\thtml\n\t\t\thtmlAst\n\t\t\ttableOfContents(maxDepth: 2, pathToSlugField: \"frontmatter.path\")\n\t\t\tfrontmatter {\n\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\tpath\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\n\t\ttoc: allMarkdownRemark(\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/documentation/.*/\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t\torder\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport React, { memo, useMemo } from 'react'\nimport { TextContainer, Gutter, TextContent } from './common'\nimport renderAst from '../util/renderHtmlAst'\nimport styled from 'styled-components'\n\nexport interface DocProps {\n\tdocPage: {\n\t\thtmlAst: any\n\t\ttableOfContents: string\n\t}\n}\n\nconst Doc: React.FC<DocProps> = memo(function Doc({ docPage }) {\n\treturn (\n\t\t<TextContainer>\n\t\t\t<Gutter />\n\t\t\t<TextContent>\n\t\t\t\t<PageToc toc={docPage.tableOfContents} />\n\t\t\t\t{renderAst(docPage.htmlAst)}\n\t\t\t</TextContent>\n\t\t\t<Gutter />\n\t\t</TextContainer>\n\t)\n})\n\nexport default Doc\n\ninterface PageTocProps {\n\ttoc: string\n}\nconst PageToc: React.FC<PageTocProps> = memo(function PageToc({ toc }) {\n\tconst tocMarkup = useMemo(() => ({ __html: toc }), [toc])\n\tif (toc.indexOf('li') === -1) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<TocContainer>\n\t\t\t<TocHeader>Contents</TocHeader>\n\t\t\t<TocContent className=\"docpage-toc\" dangerouslySetInnerHTML={tocMarkup} />\n\t\t</TocContainer>\n\t)\n})\n\nconst TocContainer = styled.div`\n\twidth: 100%;\n\tborder-bottom: 1px solid lightgrey;\n\tmargin-bottom: 40px;\n`\n\nconst TocHeader = styled.div`\n\tfont-family: sans-serif;\n\tfont-size: 12px;\n\tmargin-bottom: 10px;\n\tfont-weight: 400;\n`\n\nconst TocContent = styled.div`\n\tul {\n\t\tlist-style: none;\n\t\tli {\n\t\t\tfont-size: 12px;\n\t\t\tfont-weight: 100;\n\t\t\tfont-family: sans-serif;\n\t\t\tline-height: 1;\n\t\t}\n\t}\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport React, { memo } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Sidebar from '../components/sidebar'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\nimport Doc from '../components/doc'\n\nrequire('prismjs/themes/prism-tomorrow.css')\n\nexport interface DocStructureProps {\n\ttoc: any\n\tpathname: string\n\tpage: any\n}\nexport const DocStructure: React.FC<DocStructureProps> = memo(\n\tfunction DocStructure({ toc, pathname, page }) {\n\t\treturn (\n\t\t\t<Layout\n\t\t\t\ttitle={page.frontmatter.title}\n\t\t\t\tsidebar={\n\t\t\t\t\t<Sidebar\n\t\t\t\t\t\titems={convertGraphqlToc(toc)}\n\t\t\t\t\t\tactivePath={pathname}\n\t\t\t\t\t\tflat={false}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<Doc docPage={page} />\n\t\t\t</Layout>\n\t\t)\n\t}\n)\n\nexport default function Template({\n\tdata: { toc, currentPage },\n\tlocation: { pathname },\n}: any) {\n\treturn <DocStructure toc={toc} page={currentPage} pathname={pathname} />\n}\n\nexport const pageQuery = graphql`\n\tquery($path: String!) {\n\t\tcurrentPage: markdownRemark(frontmatter: { path: { eq: $path } }) {\n\t\t\thtml\n\t\t\thtmlAst\n\t\t\ttableOfContents(maxDepth: 2, pathToSlugField: \"frontmatter.path\")\n\t\t\tfrontmatter {\n\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\tpath\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\n\t\ttoc: allMarkdownRemark(\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/documentation/.*/\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t\torder\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}