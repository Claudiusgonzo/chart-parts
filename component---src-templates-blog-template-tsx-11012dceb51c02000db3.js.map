{"version":3,"sources":["webpack:///./src/components/post.tsx","webpack:///./src/templates/blogTemplate.tsx"],"names":["Post","post","frontmatter","date","renderAst","htmlAst","BlogStructure","memo","toc","pathname","title","sidebar","items","convertGraphqlToc","activePath","flat","Template","data","location","pageQuery"],"mappings":"4SAgCeA,EAbmB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACpC,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,MACA,kBAAC,IAAD,KACC,4BAAKA,EAAKC,YAAYC,MACrBC,YAAUH,EAAKI,UAEjB,kBAAC,IAAD,Q,YCVUC,EAA8CC,gBAC1D,YAAgD,IAAvBC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,SAAUR,EAAQ,EAARA,KACvC,OACC,kBAAC,IAAD,CACCS,MAAOT,EAAKS,MACZC,QACC,kBAAC,IAAD,CACCC,MAAOC,YAAkBL,GACzBM,WAAYL,EACZM,MAAM,KAIR,kBAAC,EAAD,CAAMd,KAAMA,QAMD,SAASe,EAAT,GAGP,QAFPC,KAAQhB,EAED,EAFCA,KAAMO,EAEP,EAFOA,IACFC,EACL,EADPS,SAAYT,SAEZ,OAAO,kBAAC,EAAD,CAAeR,KAAMA,EAAMO,IAAKA,EAAKC,SAAUA,IAGhD,IAAMU,EAAY","file":"component---src-templates-blog-template-tsx-11012dceb51c02000db3.js","sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport React from 'react'\nimport renderAst from '../util/renderHtmlAst'\nimport { TextContainer, Gutter, TextContent } from './common'\n\nexport interface PostProps {\n\tpost: {\n\t\thtml: string\n\t\thtmlAst: any\n\t\tfrontmatter: {\n\t\t\tdate: string\n\t\t}\n\t}\n}\n\nconst Post: React.FC<PostProps> = ({ post }) => {\n\treturn (\n\t\t<TextContainer>\n\t\t\t<Gutter />\n\t\t\t<TextContent>\n\t\t\t\t<h6>{post.frontmatter.date}</h6>\n\t\t\t\t{renderAst(post.htmlAst)}\n\t\t\t</TextContent>\n\t\t\t<Gutter />\n\t\t</TextContainer>\n\t)\n}\n\nexport default Post\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport React, { memo } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport Sidebar from '../components/sidebar'\nimport Post from '../components/post'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\n\nexport interface BlogStructureProps {\n\ttoc: any\n\tpathname: string\n\tpost: any\n}\nexport const BlogStructure: React.FC<BlogStructureProps> = memo(\n\tfunction BlogStructure({ toc, pathname, post }) {\n\t\treturn (\n\t\t\t<Layout\n\t\t\t\ttitle={post.title}\n\t\t\t\tsidebar={\n\t\t\t\t\t<Sidebar\n\t\t\t\t\t\titems={convertGraphqlToc(toc)}\n\t\t\t\t\t\tactivePath={pathname}\n\t\t\t\t\t\tflat={true}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<Post post={post} />\n\t\t\t</Layout>\n\t\t)\n\t}\n)\n\nexport default function Template({\n\tdata: { post, toc },\n\tlocation: { pathname },\n}: any) {\n\treturn <BlogStructure post={post} toc={toc} pathname={pathname} />\n}\n\nexport const pageQuery = graphql`\n\tquery($path: String!) {\n\t\tpost: markdownRemark(frontmatter: { path: { eq: $path } }) {\n\t\t\thtml\n\t\t\thtmlAst\n\t\t\tfrontmatter {\n\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\tpath\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\n\t\ttoc: allMarkdownRemark(\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t\torder\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}